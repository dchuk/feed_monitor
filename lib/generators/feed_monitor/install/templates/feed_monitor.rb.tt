# frozen_string_literal: true

# Feed Monitor engine configuration.
#
# These values default to conservative settings that work for most hosts.
# Tweak them here instead of monkey-patching the engine so upgrades remain easy.
FeedMonitor.configure do |config|
  # Namespace used when deriving queue names and instrumentation keys. If your
  # host app already prefixes queues (via ActiveJob.queue_name_prefix), this
  # string is automatically combined with that prefix.
  config.queue_namespace = "feed_monitor"

  # Dedicated queue names for fetching and scraping jobs. Solid Queue will use
  # these names when dispatching work; ensure they match entries in
  # config/solid_queue.yml (or your chosen Active Job backend).
  config.fetch_queue_name = "#{config.queue_namespace}_fetch"
  config.scrape_queue_name = "#{config.queue_namespace}_scrape"

  # Recommended worker concurrency for each queue when using Solid Queue.
  # Adjust to fit the workload and infrastructure available in the host app.
  config.fetch_queue_concurrency = 2
  config.scrape_queue_concurrency = 2

  # Toggle Feed Monitor's lightweight queue visibility layer. When enabled (the
  # default), the dashboard shows queue depth and last-run timestamps sourced
  # from ActiveSupport::Notifications.
  config.job_metrics_enabled = true

  # Mission Control integration is optional. Flip this to true to surface an
  # "Open Mission Control" link on the Feed Monitor dashboard.
  config.mission_control_enabled = false

  # Provide a String path ("/mission_control"), a route helper
  # (-> { Rails.application.routes.url_helpers.mission_control_jobs_path }),
  # or nil if you prefer not to link directly. This is only referenced when
  # mission_control_enabled is true. Ensure the host routes mount Mission
  # Control when supplying a path, for example:
  #   # Gemfile: gem "mission_control-jobs"
  #   # config/routes.rb:
  #   #   mount MissionControl::Jobs::Engine, at: "/mission_control"
  #   # config.mission_control_dashboard_path = "/mission_control"
  config.mission_control_dashboard_path = nil
end
